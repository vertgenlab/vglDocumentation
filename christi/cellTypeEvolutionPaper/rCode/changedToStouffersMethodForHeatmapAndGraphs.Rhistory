scale_size(range = c(1, 2)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf")
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 2)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
dev.off()
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf", width=50)
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 2)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
dev.off()
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf", width=5)
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 2)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
dev.off()
View(humanSig)
humanSig <- subset(humanData, humanData$p_adjust_hyper<0.0005)
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf")
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 2)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
dev.off()
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf", height=100, width=20)
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 2)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
dev.off()
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 2)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf", height=100, width=20)
warnings()
assign("last.warning", NULL, envir = baseenv())
warnings()
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf", height=100, width=20)
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 2)) +
scale_color_viridis_b() +
theme_ipsum()
dev.off()
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf", height=100, width=20)
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 2)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
dev.off()
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf", height=100, width=20)
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 10)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
dev.off()
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf")
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 10)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
dev.off()
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 10)) +
scale_color_viridis_b() +
theme_ipsum() +
theme(legend.position="none")
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 10)) +
scale_color_viridis_b()
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf")
ggplot(humanSig, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 10)) +
scale_color_viridis_b()
dev.off()
humanEnrich <- subset(huamnData, humanData$fold_enrichment>1.1)
humanEnrich <- subset(humanData, humanData$fold_enrichment>1.1)
humanSigEnrich <- subset(humanEnrich, humanEnrich$p_adjust<0.05)
humanSigEnrich <- subset(humanEnrich, humanEnrich$p_adjust<0.005)
humanSigEnrich <- subset(humanEnrich, humanEnrich$p_adjust<0.0005)
humanSigEnrich <- subset(humanEnrich, humanEnrich$p_adjust_hyper<0.05)
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf")
ggplot(humanSigEnrich, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 10)) +
scale_color_viridis_b()
dev.off()
pdf(file="hg38.phastCons.CNEEs.GREAT.pdf")
ggplot(humanSigEnrich, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 10)) +
scale_color_viridis_b() +
scale_x_reverse(limits=c(0.0005, 0))
ggplot(humanSigEnrich, aes(x=p_adjust_hyper, y=id, size=fold_enrichment, color=genome_fraction)) +geom_point(alpha=0.7) +
scale_size(range = c(1, 10)) +
scale_color_viridis_b() +
scale_x_reverse()
dev.off()
View(humanEnrich)
View(humanSigEnrich)
plotVolcano(humanSigEnrich)
ggplot(data=humanSigEnrich, aes(x=fold_enrichment, y=p_adjust_hyper)) + geom_point()
ggplot(data=humanEnrich, aes(x=fold_enrichment, y=p_adjust_hyper)) + geom_point()
ggplot(data=humanData, aes(x=fold_enrichment, y=p_adjust_hyper)) + geom_point()
library(ggpubr)
library(ggplot2)
library(tidyverse)
getwd()
setwd("../")
getwd()
setwd("rGraphs")
getwd()
tissues <-read.csv("tissueEnrichments.tsv", sep="\t", header=TRUE)
muscleEnrichments <- subset(tissues, tissues$Tissue==Muscle)
View(tissues)
muscleEnrichments <- subset(tissues, tissues$Tissue=Muscle)
muscleEnrichments <- subset(tissues, Tissue=Muscle)
tissuesNum <- transform(tissues, tiss=as.numeric(as.factor(Tissue)))
View(tissuesNum)
View(muscleEnrichments)
tissuesNum <- transform(tissues, tiss=as.numeric(as.factor(Tissue)))
View(tissuesNum)
muscleEnrichments <- subset(tissuesNum, tiss==3)
View(muscleEnrichments)
immuneEnrichments <- subset(tissuesNum, tiss==1)
lungEnrichments <- subset(tissuesNum, tiss==2)
placentaEnrichments <- subset(tissuesNum, tiss==4)
reproEnrichments <- subset(tissuesNum, tiss==5)
musc <- tibble(Type=as.factor(lungEnrichments$Tissue), Node=as.numeric(as.character(factor(lungEnrichments$Node))), Enrichment=as.numeric(as.character(factor(lungEnrichments$Enrichment)))) %>% ggplot(aes(x=Node, y=Enrichment, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30)) + scale_x_reverse(limits=c(19,0))
ggpar(musc, xticks.by = 1, xlim=c(19,0))
musc <- tibble(Type=as.factor(lungEnrichments$Tissue), Node=as.numeric(as.character(factor(lungEnrichments$Node))), Enrichment=as.numeric(as.character(factor(lungEnrichments$Enrichment)))) %>% ggplot(aes(x=Enrichment, y=Node, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30)) + scale_x_reverse(limits=c(19,0))
ggpar(musc, xticks.by = 1, xlim=c(19,0))
ggpar(musc, xticks.by = 1, ylim=c(19,0))
musc <- tibble(Type=as.factor(lungEnrichments$Tissue), Node=as.numeric(as.character(factor(lungEnrichments$Node))), Enrichment=as.numeric(as.character(factor(lungEnrichments$Enrichment)))) %>% ggplot(aes(x=Enrichment, y=Node, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(xintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(xlim=c(-30,30)) + scale_y_reverse(limits=c(19,0))
ggpar(musc, xticks.by = 1, ylim=c(19,0))
musc <- tibble(Type=as.factor(lungEnrichments$Tissue), Node=as.numeric(as.character(factor(lungEnrichments$Node))), Enrichment=as.numeric(as.character(factor(lungEnrichments$Enrichment)))) %>% ggplot(aes(x=Enrichment, y=Node, group=Type, color=Type)) + geom_line() + geom_point() + geom_vline(xintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(xlim=c(-30,30)) + scale_y_reverse(limits=c(19,0))
ggpar(musc, xticks.by = 1, ylim=c(19,0))
allDeathStats <- read.csv("deathStats.tsv", sep="\t", header=TRUE)
mat <- as.matrix(allDeathStats)
View(allDeathStats)
getwd()
death <- read.csv("../deathNodeStats/upadtedTissuePlasticity.tsv")
death <- read.csv("../deathNodesStats/upadtedTissuePlasticity.tsv", header=TRUE, sep="\t")
death <- read.csv("../deathNodesStats/updatedTissuePlasticity.tsv", header=TRUE, sep="\t")
View(death)
deathNum <- transform(death, tiss=as.numeric(as.factor(Tissue)))
View(deathNum)
muscleDeath <- subset(deathNum, tiss==3)
View(muscleDeath)
immuneDeath <- subset(deathNum, tiss==1)
View(deathNum)
reproDeath <- subset(deathNum, tiss==6)
lungDeath <- subset(deathNum, tiss==2)
placentaDeath <- subset(deathNum, tiss==5)
neuronDeath <- subset(deathNum, tiss==4)
musc <- tibble(Type=as.factor(muscleDeath$Tissue), Node=as.numeric(as.character(factor(muscleDeath$Node))), Plasticity=as.numeric(as.character(factor(muscleDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
ggpar(musc, xticks.by = 1)
View(muscleDeath)
death <- read.csv("../deathNodesStats/updatedTissuePlasticity.tsv", header=TRUE, sep="\t")
deathNum <- transform(death, tiss=as.numeric(as.factor(Tissue)))
muscleDeath <- subset(deathNum, tiss==3)
immuneDeath <- subset(deathNum, tiss==1)
reproDeath <- subset(deathNum, tiss==6)
lungDeath <- subset(deathNum, tiss==2)
neuronDeath <- subset(deathNum, tiss==4)
View(post)
View(deathNum)
placentaDeath <- subset(deathNum, tiss==5)
musc <- tibble(Type=as.factor(muscleDeath$Tissue), Node=as.numeric(as.character(factor(muscleDeath$Node))), Plasticity=as.numeric(as.character(factor(muscleDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
View(musc)
ggpar(musc, xticks.by = 1)
View(muscleDeath)
death <- read.csv("../deathNodesStats/updatedTissuePlasticity.tsv", header=TRUE, sep="\t")
View(death)
deathNum <- transform(death, tiss=as.numeric(as.factor(Tissue)))
muscleDeath <- subset(deathNum, tiss==3)
immuneDeath <- subset(deathNum, tiss==1)
reproDeath <- subset(deathNum, tiss==6)
lungDeath <- subset(deathNum, tiss==2)
neuronDeath <- subset(deathNum, tiss==4)
placentaDeath <- subset(deathNum, tiss==5)
musc <- tibble(Type=as.factor(muscleDeath$Tissue), Node=as.numeric(as.character(factor(muscleDeath$Node))), Plasticity=as.numeric(as.character(factor(muscleDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
ggpar(musc, xticks.by = 1)
musc <- tibble(Type=as.factor(muscleDeath$Tissue), Node=as.numeric(as.character(factor(muscleDeath$Node))), Plasticity=as.numeric(as.character(factor(muscleDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30)) +scale_x_reverse(limits=c(19,0))
ggpar(musc, xticks.by = 1, xlim=c(19,0))
musc <- tibble(Type=as.factor(muscleDeath$Tissue), Node=as.numeric(as.character(factor(muscleDeath$Node))), Plasticity=as.numeric(as.character(factor(muscleDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30)) +scale_x_reverse(limits=c(16,1))
ggpar(musc, xticks.by = 1, xlim=c(16,1))
pdf(file="deathByNodeMuscle.pdf")
ggpar(musc, xticks.by = 1, xlim=c(16,1))
dev.off()
getwd()
imm <- tibble(Type=as.factor(immuneDeath$Tissue), Node=as.numeric(as.character(factor(immuneDeath$Node))), Plasticity=as.numeric(as.character(factor(immuneDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30)) +scale_x_reverse(limits=c(16,1))
pdf(file="deathByNodeImmune.pdf")
ggpar(imm, xticks.by = 1, xlim=c(16,1))
dev.off()
ggpar(imm, xticks.by = 1, xlim=c(16,1))
imm <- tibble(Type=as.factor(immuneDeath$Tissue), Node=as.numeric(as.character(factor(immuneDeath$Node))), Plasticity=as.numeric(as.character(factor(immuneDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
ggpar(imm, xticks.by = 1, xlim=c(16,1))
imm <- tibble(Type=as.factor(immuneDeath$Tissue), Node=as.numeric(as.character(factor(immuneDeath$Node))), Plasticity=as.numeric(as.character(factor(immuneDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30)) +scale_x_reverse(limits=c(16,1))
ggpar(imm, xticks.by = 1
)
imm <- tibble(Type=as.factor(immuneDeath$Tissue), Node=as.numeric(as.character(factor(immuneDeath$Node))), Plasticity=as.numeric(as.character(factor(immuneDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
ggpar(imm, xticks.by = 1, xlim=c(16,1))
imm <- tibble(Type=as.factor(immuneDeath$Tissue), Node=as.numeric(as.character(factor(immuneDeath$Node))), Plasticity=as.numeric(as.character(factor(immuneDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30)) +scale_x_reverse(limits=c(16,1))
ggpar(imm, xticks.by = 1, xlim=c(16,1))
imm <- tibble(Type=as.factor(immuneDeath$Tissue), Node=as.numeric(as.character(factor(immuneDeath$Node))), Plasticity=as.numeric(as.character(factor(immuneDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
ggpar(imm, xticks.by = 1)
imm <- tibble(Type=as.factor(immuneDeath$Tissue), Node=as.numeric(as.character(factor(immuneDeath$Node))), Plasticity=as.numeric(as.character(factor(immuneDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
pdf(file="deathByNodeImmune.pdf")
ggpar(imm, xticks.by = 1)
dev.off()
pdf(file="deathByNodeMuscle.pdf")
ggpar(musc, xticks.by = 1)
dev.off()
pdf(file="deathByNodeReproduction.pdf")
dev.off()
repro <- tibble(Type=as.factor(reproDeath$Tissue), Node=as.numeric(as.character(factor(reproDeath$Node))), Plasticity=as.numeric(as.character(factor(reproDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
ggpar(musc, xticks.by = 1)
View(reproDeath)
ggpar(repro, xticks.by = 1)
pdf(file="deathByNodeReproduction.pdf")
ggpar(repro, xticks.by = 1)
dev.off()
plac <- tibble(Type=as.factor(placentaDeath$Tissue), Node=as.numeric(as.character(factor(placentaDeath$Node))), Plasticity=as.numeric(as.character(factor(placentaDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
ggpar(plac, xticks.by = 1)
pdf(file="deathByNodePlacenta.pdf")
ggpar(plac, xticks.by = 1)
dev.off()
lng <- tibble(Type=as.factor(lungDeath$Tissue), Node=as.numeric(as.character(factor(lungDeath$Node))), Plasticity=as.numeric(as.character(factor(lungDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
ggpar(lng, xticks.by = 1)
pdf(file="deathByNodeLung.pdf")
ggpar(lng, xticks.by = 1)
dev.off()
neuro <- tibble(Type=as.factor(neuronDeath$Tissue), Node=as.numeric(as.character(factor(neuronDeath$Node))), Plasticity=as.numeric(as.character(factor(neuronDeath$Plasticity)))) %>% ggplot(aes(x=Node, y=Plasticity, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=0, linetype="dotted", col="black") + theme_classic() + coord_cartesian(ylim=c(-30,30))
ggpar(neuro, xticks.by = 1)
View(death)
View(deathNum)
pdf(file="deathByNodeNeuron.pdf")
ggpar(neuro, xticks.by = 1)
dev.off()
allTissues <- tibble(Type=as.factor(deathNum$Tissue), Node=as.numeric(as.character(factor(deathNum$Node))), Plasticity=as.numeric(as.character(factor(deathNum$Plasticity)))) %>% ggplot( aes(x=Node, y=Plasticity, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
ggpar(allTissues, xticks.by = 1)
allTissues <- tibble(Type=as.factor(deathNum$Tissue), Node=as.numeric(as.character(factor(deathNum$Node))), Plasticity=as.numeric(as.character(factor(deathNum$Plasticity)))) %>% ggplot( aes(x=Node, y=Plasticity, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue() +scale_x_reverse(c(16, 1))
ggpar(allTissues, xticks.by = 1)
ggpar(allTissues)
allTissues <- tibble(Type=as.factor(deathNum$Tissue), Node=as.numeric(as.character(factor(deathNum$Node))), Plasticity=as.numeric(as.character(factor(deathNum$Plasticity)))) %>% ggplot( aes(x=Node, y=Plasticity, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue() +scale_x_reverse(c(16, 1)) + xticks.by = 1
allTissues <- tibble(Type=as.factor(deathNum$Tissue), Node=as.numeric(as.character(factor(deathNum$Node))), Plasticity=as.numeric(as.character(factor(deathNum$Plasticity)))) %>% ggplot( aes(x=Node, y=Plasticity, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue() +scale_x_reverse(c(16, 1))
ggpar(allTissues, scale_x_reverse(16, 1), xticks.by = 1)
allTissues <- tibble(Type=as.factor(deathNum$Tissue), Node=as.numeric(as.character(factor(deathNum$Node))), Plasticity=as.numeric(as.character(factor(deathNum$Plasticity)))) %>% ggplot( aes(x=Node, y=Plasticity, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
ggpar(allTissues, scale_x_reverse(16, 1), xticks.by = 1)
ggpar(allTissues, xlim=c(16, 1), xticks.by = 1)
ggpar(allTissues)
ggpar(allTissues, xlim=c(16, 1))
ggpar(allTissues
)
pdf(file=allTissuesPlasticity.pdf)
ggpar(allTissues)
dev.off()
pdf(file="allTissuesPlasticity.pdf"")
pdf(file="allTissuesPlasticity.pdf")
ggpar(allTissues)
dev.off()
pdf(file="allTissuesPlasticity.pdf", width=20)
ggpar(allTissues)
dev.off()
savehistory(file="deathByNodesAndGREATTests.psf")
library(heatmap)
install.packages("heatmap")
library(heatmap)
library(pheatmap)
install.packages("pheatmap")
library(pheatmap)
allDeathStats <- read.csv("../deathNodesStats/updatedAllSpeciesDeath.tsv", sep="\t", header=TRUE)
allDeathStats <- read.csv("../deathNodesStats/updatedAllSpeciesDeathSoted.tsv", sep="\t", header=TRUE)
allDeathStats <- read.csv("../deathNodesStats/updatedAllSpeciesDeathSorted.tsv", sep="\t", header=TRUE)
mat <- as.matrix(allDeathStats)
sortedRows <- allDeathStats[,-1]
rownames(sortedRows) <- allDeathStats$CellType
View(sortedRows)
sortedMat <-as.matrix(sortedRows)
heatmap(sortedMat, Colv=NA, Rowv=NA)
heatmap(sortedMat, Colv=NA, Rowv=NA)
install.packages("BiocManager")
BiocManager::install("ComplexHeatmap")
install.packages("Matrix")
library("matrix")
library(Matrix)
library(ComplexHeatmap)
Heatmap(sortedMat, col = rev(rainbow(20)))
pdf(file="sortedHeatmapDeath.pdf", height=45, width=20)
Heatmap(sortedRows, col = col_fun, show_column_dend = FALSE, show_row_dend = FALSE, heatmap_height = unit(0.5, "cm")*nrow(mat), heatmap_width = unit(0.20, "cm")*nrow(mat), cluster_rows = FALSE, cluster_columns = FALSE)
col_fun = colorRamp2(c(-4, 0, 4), c("blue", "white", "red"))
library(circlize)
col_fun = colorRamp2(c(-4, 0, 4), c("blue", "white", "red"))
col_fun(seq(-4, 4))
Heatmap(sortedMat, col = col_fun, show_column_dend = FALSE, show_row_dend = FALSE, heatmap_height = unit(0.5, "cm")*nrow(mat), heatmap_width = unit(0.25, "cm")*nrow(mat), cluster_rows = FALSE, cluster_columns = FALSE)
dev.off()
pdf(file="sortedHeatmapDeath.pdf", height=45, width=20)
Heatmap(sortedMat, col = col_fun, show_column_dend = FALSE, show_row_dend = FALSE, heatmap_height = unit(0.5, "cm")*nrow(mat), heatmap_width = unit(0.25, "cm")*nrow(mat), cluster_rows = FALSE, cluster_columns = FALSE)
dev.off()
pdf(file="sortedHeatmapDeath.pdf")
Heatmap(sortedMat, col = col_fun, show_column_dend = FALSE, show_row_dend = FALSE, heatmap_height = unit(0.5, "cm")*nrow(mat), heatmap_width = unit(0.25, "cm")*nrow(mat), cluster_rows = FALSE, cluster_columns = FALSE)
dev.off()
pdf(file="sortedHeatmapDeath.pdf", width=40, height=60)
Heatmap(sortedMat, col = col_fun, show_column_dend = FALSE, show_row_dend = FALSE, heatmap_height = unit(0.5, "cm")*nrow(mat), heatmap_width = unit(0.25, "cm")*nrow(mat), cluster_rows = FALSE, cluster_columns = FALSE)
dev.off()
pdf(file="sortedHeatmapDeath.pdf", width=25, height=40)
Heatmap(sortedMat, col = col_fun, show_column_dend = FALSE, show_row_dend = FALSE, heatmap_height = unit(0.5, "cm")*nrow(mat), heatmap_width = unit(0.25, "cm")*nrow(mat), cluster_rows = FALSE, cluster_columns = FALSE)
dev.off()
pdf(file="sortedHeatmapDeath.pdf", width=25, height=50)
Heatmap(sortedMat, col = col_fun, show_column_dend = FALSE, show_row_dend = FALSE, heatmap_height = unit(0.5, "cm")*nrow(mat), heatmap_width = unit(0.25, "cm")*nrow(mat), cluster_rows = FALSE, cluster_columns = FALSE)
dev.off()
savehistory(file="deathByNodesNewDeathHeatmapAndGREATTests.psf")
cardiacPhastCons <- read.csv(file="cardiacDiffPhastCons.tsv", header=TRUE, sep="\t")
View(cardiacPhastCons)
neuronDiffPhastCons <- read.csv(file="morphNeuronDiffPhastCons.tsv", header=TRUE, sep="\t")
skelMuscPhastCons <- read.csv(file="skeletalMuscDevPhastCons.tsv", header=TRUE, sep="\t")
View(skelMuscPhastCons)
phastConBirth <- read.csv(file="GOTermsPhastCons.tsv", header=TRUE, sep="\t")
View(phastConBirth)
neuro <- tibble(Species=as.factor(phastConBirth$Species), MYA=asnumeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Neuron)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
neuro <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Neuron)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
ggpar(neuro)
View(neuro)
pdf(file="neuroPhastConsBirth.pdf")
ggpar(neuro)
dev.off()
getwd()
phastConBirth <- read.csv(file="GOTermsPhastCons.tsv", header=TRUE, sep="\t")
neuro <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Neuron)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
pdf(file="neuroPhastConsBirth.pdf")
ggpar(neuro)
dev.off()
cardiac <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Cardiac)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
pdf(file="cardiacPhastConsBirth.pdf")
ggpar(cardiac)
dev.off()
cardiac <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Skeletal)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
cardiac <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Cardiac)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
skeletal <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Skeletal)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
pdf(file="skeletalPhastConsBirth.pdf")
ggpar(skeletal)
dev.off()
phastConBirth <- read.csv(file="GOTermsPhastCons.tsv", header=TRUE, sep="\t")
macrophage <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Macrophage)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
pdf(file="macrophagePhastConsBirth.pdf")
ggpar(macrophage)
dev.off()
savehistory(file="phastConBirthEnrichments.Rhistory")
phastConBirth <- read.csv(file="GOTermsPhastCons.tsv", header=TRUE, sep="\t")
trophoblast <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Trophoblast)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
pdf(file="trophoblastPhastConsBirth.pdf")
ggpar(trophoblast)
dev.off()
pdf(file="trophoblastPhastConsBirth.pdf")
trophoblast <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Trophoblast)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0)) + scale_y_break(c(2, 4))
ggpar(trophoblast)
dev.off()
trophoblast <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Trophoblast)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0)) + scale_y_break(c(2, 4)) + scale_y_break(c(5, 8))
pdf(file="trophoblastPhastConsBirth.pdf")
ggpar(trophoblast)
dev.off()
trophoblast <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Trophoblast)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0)) + scale_y_break(c(2, 4.5)) + scale_y_break(c(5, 8))
pdf(file="trophoblastPhastConsBirth.pdf")
ggpar(trophoblast)
dev.off()
trophoblast <- tibble(Species=as.factor(phastConBirth$Species), MYA=as.numeric(as.character(factor(phastConBirth$MYA))), Enrichment=as.numeric(as.character(factor(phastConBirth$Trophoblast)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0)) + scale_y_break(c(2.5, 4.5)) + scale_y_break(c(5, 7.5))
pdf(file="trophoblastPhastConsBirth.pdf")
ggpar(trophoblast)
dev.off()
savehistory(file="phastConBirthEnrichments.Rhistory")
placCellsBirth <- read.csv(file="individualPlacentalCellTypesBirth.tsv", header=TRUE, sep="\t")
placCells <- tibble(Type=as.factor(placCellsBirth$Cell.Type), MYA=as.numeric(as.character(factor(placCellsBirth$MYA))), Enrichment=as.numeric(as.character(factor(placCellsBirth$Enrichment)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Species, color=Species)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
ggpar(placCells)
placCells <- tibble(Type=as.factor(placCellsBirth$Cell.Type), MYA=as.numeric(as.character(factor(placCellsBirth$MYA))), Enrichment=as.numeric(as.character(factor(placCellsBirth$Enrichment)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
ggpar(placCells)
pdf(file="placentalCellsIndividualBirth.pdf")
ggpar(placCells)
dev.off()
savehistory(file="phastConBirthEnrichmentsAndPlacentalIndividualCellsEnrichments.Rhistory")
library(circlize)
col_fun = colorRamp2(c(-2, 0, 2), c("blue", "white", "red"))
col_fun = colorRamp2(c(-1.6, 0, 1.6), c("blue", "white", "red"))
col_fun(seq(-1.6, 1.6))
death <- read.csv("../deathNodesStats/updatedTissuePlasticity.tsv", header=TRUE, sep="\t")
> View(death)
allDeathStats <- read.csv("../deathNodesStats/updatedAllSpeciesDeath.tsv", sep="\t", header=TRUE)
getwd()
allDeathStats <- read.csv("../deathNodesStats/updatedAllSpeciesDeathSorted.tsv", sep="\t", header=TRUE)
mat <- as.matrix(allDeathStats)
sortedRows <- allDeathStats[,-1]
rownames(sortedRows) <- allDeathStats$CellType
sortedMat <-as.matrix(sortedRows)
Heatmap(sortedRows, col = col_fun, show_column_dend = FALSE, show_row_dend = FALSE, heatmap_height = unit(0.5, "cm")*nrow(mat), heatmap_width = unit(0.20, "cm")*nrow(mat), cluster_rows = FALSE, cluster_columns = FALSE)
Heatmap(sortedMat, col = col_fun, show_column_dend = FALSE, show_row_dend = FALSE, heatmap_height = unit(0.5, "cm")*nrow(mat), heatmap_width = unit(0.20, "cm")*nrow(mat), cluster_rows = FALSE, cluster_columns = FALSE)
pdf(file="sortedHeatmapDeath.pdf", width=25, height=50)
Heatmap(sortedMat, col = col_fun, show_column_dend = FALSE, show_row_dend = FALSE, heatmap_height = unit(0.5, "cm")*nrow(mat), heatmap_width = unit(0.20, "cm")*nrow(mat), cluster_rows = FALSE, cluster_columns = FALSE)
dev.off()
death <- read.csv("../deathNodesStats/updatedTissuePlasticity.tsv", header=TRUE, sep="\t")
birth <- read.csv("updatedZScoreTissueBirth.tsv", header=TRUE, sep="\t")
birth <- read.csv("updatedZScoreTissueBirth.tsv", header=TRUE, sep="\t")
> allTissues <- tibble(Type=as.factor(deathNum$Tissue), Node=as.numeric(as.character(factor(deathNum$Node))), Plasticity=as.numeric(as.character(factor(deathNum$Plasticity)))) %>% ggplot( aes(x=Node, y=Plasticity, group=Type, color=Type)) +
allTissues <- tibble(Type=as.factor(deathNum$Tissue), Node=as.numeric(as.character(factor(deathNum$Node))), Plasticity=as.numeric(as.character(factor(deathNum$Plasticity)))) %>% ggplot( aes(x=Node, y=Plasticity, group=Type, color=Type)) +
+     geom_line() + theme_classic() +
+     theme(legend.position="top", plot.title = element_text(size=16)) +
+     facet_wrap(~Type, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
ggpar(allTissues, scale_x_reverse(16, 1), xticks.by = 1)
View(deathNum)
deathNum <- transform(death, tiss=as.numeric(as.factor(Tissue)))
birthNum <- transform(birth, tiss=asnumeric(as.factor(Tissues)))
birthNum <- transform(birth, tiss=as.numeric(as.factor(Tissues)))
birthNum <- transform(birth, tiss=as.numeric(as.factor(Tissue)))
allTissues <- tibble(Type=as.factor(tissuesNum$Tissue), Node=as.numeric(as.character(factor(tissuesNum$Node))), Enrichment=as.numeric(as.character(factor(tissuesNum$Z.Score)))) %>% ggplot( aes(x=Node, y=Enrichment, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
allTissues <- tibble(Type=as.factor(tissuesNum$Tissue), MYA=as.numeric(as.character(factor(tissuesNum$MYA))), Enrichment=as.numeric(as.character(factor(tissuesNum$Z.Score)))) %>% ggplot( aes(x=MYA, y=Enrichment, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
allTissues <- tibble(Type=as.factor(birthNum$Tissue), MYA=as.numeric(as.character(factor(birthNum$MYA))), Enrichment=as.numeric(as.character(factor(birthNum$Z.Score)))) %>% ggplot( aes(x=MYA, y=Enrichment, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
pdf(file="allTissuesBirthUpdated.pdf")
ggpar(allTissues, xticks.by = 1, xlim = c(600,0))
ggpar(allTissues, xlim = c(600,0))
dev.off()
pdf(file="allTissuesBirthUpdated.pdf")
ggpar(allTissues, xlim = c(600,0))
dev.off()
allTissues <- tibble(Type=as.factor(birthNum$Tissue), MYA=as.numeric(as.character(factor(birthNum$MYA))), Enrichment=as.numeric(as.character(factor(birthNum$Z.Score)))) %>% ggplot( aes(x=MYA, y=Enrichment, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, nrow=6, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
pdf(file="allTissuesBirthUpdated.pdf")
ggpar(allTissues, xlim = c(600,0))
dev.off()
pdf(file="allTissuesBirthUpdated.pdf", height=50)
dev.off()
pdf(file="allTissuesBirthUpdated.pdf", height=50)
ggpar(allTissues, xlim = c(600,0))
dev.off()
pdf(file="allTissuesBirthUpdated.pdf", height=25, width=30)
ggpar(allTissues, xlim = c(600,0))
dev.off()
allTissues <- tibble(Type=as.factor(deathNum$Tissue), MYA=as.numeric(as.character(factor(deathNum$MYA))), Enrichment=as.numeric(as.character(factor(deathNum$Z.Score)))) %>% ggplot( aes(x=MYA, y=Enrichment, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, nrow=6, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
allTissues <- tibble(Type=as.factor(birthNum$Tissue), MYA=as.numeric(as.character(factor(birthNum$MYA))), Enrichment=as.numeric(as.character(factor(birthNum$Z.Score)))) %>% ggplot( aes(x=MYA, y=Enrichment, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, nrow=6, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
allTissuesDeath <- tibble(Type=as.factor(deathNum$Tissue), MYA=as.numeric(as.character(factor(deathNum$MYA))), Enrichment=as.numeric(as.character(factor(deathNum$Z.Score)))) %>% ggplot( aes(x=MYA, y=Enrichment, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, nrow=6, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
pdf(file="allTissuesDeathUpdated.pdf", height=25, width=30)
ggpar(allTissuesDeath, xlim = c(600,0))
dev.off()
pdf(file="allTissuesDeathUpdated.pdf", height=25, width=30)
ggpar(allTissuesDeath, xlim = c(600,0), yticks.by = 1)
dev.off()
allTissuesDeath <- tibble(Type=as.factor(deathNum$Tissue), MYA=as.numeric(as.character(factor(deathNum$MYA))), Enrichment=as.numeric(as.character(factor(deathNum$Z.Score)))) %>% ggplot( aes(x=MYA, y=Enrichment, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, nrow=6, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + geom_hline(yintercept=1.6, linetype="solid", col="black") + geom_hline(yintercept=0, linetype="dotted", col="black") + scale_color_hue()
allTissuesDeath <- tibble(Type=as.factor(deathNum$Tissue), MYA=as.numeric(as.character(factor(deathNum$MYA))), Enrichment=as.numeric(as.character(factor(deathNum$Z.Score)))) %>% ggplot( aes(x=MYA, y=Enrichment, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, nrow=6, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + geom_hline(yintercept=1.6, linetype="solid", col="black") + geom_hline(yintercept=-1.6, linetype="solid", col="black") + scale_color_hue()
ggpar(allTissuesDeath, xlim = c(600,0), yticks.by = 1)
pdf(file="allTissuesDeathUpdated.pdf", height=25, width=30)
ggpar(allTissuesDeath, xlim = c(600,0), yticks.by = 1)
dev.off()
allTissues <- tibble(Type=as.factor(birthNum$Tissue), MYA=as.numeric(as.character(factor(birthNum$MYA))), Enrichment=as.numeric(as.character(factor(birthNum$Z.Score)))) %>% ggplot( aes(x=MYA, y=Enrichment, group=Type, color=Type)) +
geom_line() + theme_classic() +
theme(legend.position="top", plot.title = element_text(size=16)) +
facet_wrap(~Type, nrow=6, scale="free_y") + geom_hline(yintercept=0, linetype="dotted", col="black") + geom_hline(yintercept=1.6, linetype="solid", col="black") + geom_hline(yintercept=-1.6, linetype="solid", col="black") + scale_color_hue()
pdf(file="allTissuesBirthUpdated.pdf", height=25, width=30)
ggpar(allTissues, xlim = c(600,0), yticks.by = 1)
dev.off()
savehistory(file="changedToStouffersMethodForHeatmapAndGraphs.Rhistory")
partial <- read.csv("partialCellTypeCombination.tsv", header=TRUE, sep="\t")
graph <- tibble(Type=as.factor(partial$CellType), MYA=as.numeric(as.character(factor(partial$MYA))), Enrichment=as.numeric(as.character(factor(partial$Z.Score)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
ggpar(graph, yticks.by = 1)
imm <- read.csv("partialImmuneCombination.tsv", header=TRUE, sep="\t")
immGraph <- tibble(Type=as.factor(imm$CellType), MYA=as.numeric(as.character(factor(imm$MYA))), Enrichment=as.numeric(as.character(factor(imm$Z.Score)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
ggpar(immGraph, yticks.by = 1)
neuro <- read.csv("neuronPartialCombo.tsv", header=TRUE, sep="\t")
neuroGraph <- tibble(Type=as.factor(neuro$CellType), MYA=as.numeric(as.character(factor(neuro$MYA))), Enrichment=as.numeric(as.character(factor(neuro$Z.Score)))) %>% ggplot(aes(x=MYA, y=Enrichment, group=Type, color=Type)) + geom_line() + geom_point() + geom_hline(yintercept=1, linetype="dotted", col="black") + theme_classic() + scale_x_reverse(limits=c(600,0))
ggpar(neuroGraph, yticks.by = 1)
